[{"C:\\Học tập\\entertainment\\src\\index.js":"1","C:\\Học tập\\entertainment\\src\\components\\Header\\Header.js":"2","C:\\Học tập\\entertainment\\src\\components\\MainNav.js":"3","C:\\Học tập\\entertainment\\src\\Pages\\Series\\Series.js":"4","C:\\Học tập\\entertainment\\src\\Pages\\Trending\\Trending.js":"5","C:\\Học tập\\entertainment\\src\\components\\Pagination\\CustomPagination.js":"6","C:\\Học tập\\entertainment\\src\\components\\Genres\\Genres.js":"7","C:\\Học tập\\entertainment\\src\\components\\Carousel\\Carousel.js":"8","C:\\Học tập\\entertainment\\src\\App.js":"9","C:\\Học tập\\entertainment\\src\\Pages\\Search\\Search.js":"10","C:\\Học tập\\entertainment\\src\\components\\ContentModal\\ContentModal.js":"11","C:\\Học tập\\entertainment\\src\\Pages\\Movies\\Movies.js":"12"},{"size":281,"mtime":1612938088000,"results":"13","hashOfConfig":"14"},{"size":202,"mtime":1612938088000,"results":"15","hashOfConfig":"14"},{"size":1815,"mtime":1618759955493,"results":"16","hashOfConfig":"14"},{"size":1991,"mtime":1618762360374,"results":"17","hashOfConfig":"14"},{"size":1282,"mtime":1618760311651,"results":"18","hashOfConfig":"14"},{"size":863,"mtime":1618761506697,"results":"19","hashOfConfig":"14"},{"size":1543,"mtime":1612938088000,"results":"20","hashOfConfig":"14"},{"size":1406,"mtime":1618762477782,"results":"21","hashOfConfig":"14"},{"size":876,"mtime":1618762109956,"results":"22","hashOfConfig":"14"},{"size":3065,"mtime":1618762351729,"results":"23","hashOfConfig":"14"},{"size":4403,"mtime":1618760553301,"results":"24","hashOfConfig":"14"},{"size":2001,"mtime":1618762340658,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2zua6u",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Học tập\\entertainment\\src\\index.js",[],"C:\\Học tập\\entertainment\\src\\components\\Header\\Header.js",[],"C:\\Học tập\\entertainment\\src\\components\\MainNav.js",[],"C:\\Học tập\\entertainment\\src\\Pages\\Series\\Series.js",["54"],"C:\\Học tập\\entertainment\\src\\Pages\\Trending\\Trending.js",["55"],"import axios from \"axios\";\nimport \"./Trending.css\";\nimport { useEffect, useState } from \"react\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\n\nconst Trending = () => {\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n\n  const fetchTrending = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.REACT_APP_API_KEY}&page=${page}`\n    );\n\n    setContent(data.results);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchTrending();\n    return () => {\n\n    };\n  }, [page]);\n\n  return (\n    <div>\n      <span className=\"pageTitle\">Trending Today</span>\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.id}\n              id={c.id}\n              poster={c.poster_path}\n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date}\n              media_type={c.media_type}\n              vote_average={c.vote_average}\n            />\n          ))}\n      </div>\n      <CustomPagination setPage={setPage} />\n    </div>\n  );\n};\n\nexport default Trending;\n","C:\\Học tập\\entertainment\\src\\components\\Pagination\\CustomPagination.js",[],"C:\\Học tập\\entertainment\\src\\components\\Genres\\Genres.js",[],"C:\\Học tập\\entertainment\\src\\components\\Carousel\\Carousel.js",["56"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport { img_300, noPicture } from \"../../config/config\";\nimport \"./Carousel.css\";\n\nconst handleDragStart = (e) => e.preventDefault();\n\nconst Gallery = ({ id, media_type }) => {\n  const [credits, setCredits] = useState([]);\n\n  const items = credits.map((c) => (\n    <div className=\"carouselItem\">\n      <img\n        src={c.profile_path ? `${img_300}/${c.profile_path}` : noPicture}\n        alt={c?.name}\n        onDragStart={handleDragStart}\n        className=\"carouselItem__img\"\n      />\n      <b className=\"carouselItem__txt\">{c?.name}</b>\n    </div>\n  ));\n\n  const responsive = {\n    0: {\n      items: 3,\n    },\n    512: {\n      items: 5,\n    },\n    1024: {\n      items: 7,\n    },\n  };\n\n  const fetchCredits = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/${media_type}/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n    );\n    setCredits(data.cast);\n  };\n\n  useEffect(() => {\n    fetchCredits();\n    return () => {};\n  }, []);\n\n  return (\n    <AliceCarousel\n      mouseTracking\n      infinite\n      disableDotsControls\n      disableButtonsControls\n      responsive={responsive}\n      items={items}\n      autoPlay\n    />\n  );\n};\n\nexport default Gallery;\n","C:\\Học tập\\entertainment\\src\\App.js",[],"C:\\Học tập\\entertainment\\src\\Pages\\Search\\Search.js",["57"],"C:\\Học tập\\entertainment\\src\\components\\ContentModal\\ContentModal.js",["58"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport axios from \"axios\";\nimport {\n  img_500,\n  unavailable,\n  unavailableLandscape,\n} from \"../../config/config\";\nimport \"./ContentModal.css\";\nimport { Button } from \"@material-ui/core\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport Carousel from \"../Carousel/Carousel\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    width: \"90%\",\n    height: \"80%\",\n    backgroundColor: \"#39445a\",\n    border: \"1px solid #282c34\",\n    borderRadius: 10,\n    color: \"white\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(1, 1, 3),\n  },\n}));\n\nexport default function TransitionsModal({ children, media_type, id }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [content, setContent] = useState();\n  const [video, setVideo] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const fetchData = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/${media_type}/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n    );\n\n    setContent(data);\n    // console.log(data);\n  };\n\n  const fetchVideo = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/${media_type}/${id}/videos?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n    );\n\n    setVideo(data.results[0]?.key);\n  };\n\n  useEffect(() => {\n    fetchData();\n    fetchVideo();\n    return () => {\n      \n    };\n  }, []);\n\n  return (\n    <>\n      <div\n        className=\"media\"\n        style={{ cursor: \"pointer\" }}\n        color=\"inherit\"\n        onClick={handleOpen}\n      >\n        {children}\n      </div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          {content && (\n            <div className={classes.paper}>\n              <div className=\"ContentModal\">\n                <img\n                  src={\n                    content.poster_path\n                      ? `${img_500}/${content.poster_path}`\n                      : unavailable\n                  }\n                  alt={content.name || content.title}\n                  className=\"ContentModal__portrait\"\n                />\n                <img\n                  src={\n                    content.backdrop_path\n                      ? `${img_500}/${content.backdrop_path}`\n                      : unavailableLandscape\n                  }\n                  alt={content.name || content.title}\n                  className=\"ContentModal__landscape\"\n                />\n                <div className=\"ContentModal__about\">\n                  <span className=\"ContentModal__title\">\n                    {content.name || content.title} (\n                    {(\n                      content.first_air_date ||\n                      content.release_date ||\n                      \"-----\"\n                    ).substring(0, 4)}\n                    )\n                  </span>\n                  {content.tagline && (\n                    <i className=\"tagline\">{content.tagline}</i>\n                  )}\n\n                  <span className=\"ContentModal__description\">\n                    {content.overview}\n                  </span>\n\n                  <div>\n                    <Carousel id={id} media_type={media_type} />\n                  </div>\n\n                  <Button\n                    variant=\"contained\"\n                    startIcon={<YouTubeIcon />}\n                    color=\"secondary\"\n                    target=\"__blank\"\n                    href={`https://www.youtube.com/watch?v=${video}`}\n                  >\n                    Watch the Trailer\n                  </Button>\n                </div>\n              </div>\n            </div>\n          )}\n        </Fade>\n      </Modal>\n    </>\n  );\n}\n","C:\\Học tập\\entertainment\\src\\Pages\\Movies\\Movies.js",["59"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Genres from \"../../components/Genres/Genres\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport useGenre from \"../../hooks/useGenre\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\n\nconst Movies = () => {\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres);\n  // console.log(selectedGenres);\n\n  const fetchMovies = async () => {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\n    );\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchMovies();\n    return () => {\n    };\n  }, [genreforURL, page]);\n\n  return (\n    <div>\n      <span className=\"pageTitle\">Discover Movies</span>\n      <Genres\n        type=\"movie\"\n        selectedGenres={selectedGenres}\n        setSelectedGenres={setSelectedGenres}\n        genres={genres}\n        setGenres={setGenres}\n        setPage={setPage}\n      />\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.id}\n              id={c.id}\n              poster={c.poster_path}\n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date}\n              media_type=\"movie\"\n              vote_average={c.vote_average}\n            />\n          ))}\n      </div>\n      {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n",{"ruleId":"60","severity":1,"message":"61","line":31,"column":6,"nodeType":"62","endLine":31,"endColumn":25,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":25,"column":6,"nodeType":"62","endLine":25,"endColumn":12,"suggestions":"65"},{"ruleId":"60","severity":1,"message":"66","line":47,"column":12,"nodeType":"62","endLine":47,"endColumn":14,"suggestions":"67"},{"ruleId":"60","severity":1,"message":"68","line":53,"column":6,"nodeType":"62","endLine":53,"endColumn":18,"suggestions":"69"},{"ruleId":"60","severity":1,"message":"70","line":72,"column":6,"nodeType":"62","endLine":72,"endColumn":8,"suggestions":"71"},{"ruleId":"60","severity":1,"message":"72","line":30,"column":6,"nodeType":"62","endLine":30,"endColumn":25,"suggestions":"73"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSeries'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'fetchTrending'. Either include it or remove the dependency array.",["75"],"React Hook useEffect has a missing dependency: 'fetchCredits'. Either include it or remove the dependency array.",["76"],"React Hook useEffect has a missing dependency: 'fetchSearch'. Either include it or remove the dependency array.",["77"],"React Hook useEffect has missing dependencies: 'fetchData' and 'fetchVideo'. Either include them or remove the dependency array.",["78"],"React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [fetchSeries, genreforURL, page]",{"range":"92","text":"93"},"Update the dependencies array to be: [fetchTrending, page]",{"range":"94","text":"95"},"Update the dependencies array to be: [fetchCredits]",{"range":"96","text":"97"},"Update the dependencies array to be: [type, page, fetchSearch]",{"range":"98","text":"99"},"Update the dependencies array to be: [fetchData, fetchVideo]",{"range":"100","text":"101"},"Update the dependencies array to be: [fetchMovies, genreforURL, page]",{"range":"102","text":"103"},[1124,1143],"[fetchSeries, genreforURL, page]",[686,692],"[fetchTrending, page]",[1179,1181],"[fetchCredits]",[1351,1363],"[type, page, fetchSearch]",[1830,1832],"[fetchData, fetchVideo]",[1128,1147],"[fetchMovies, genreforURL, page]"]